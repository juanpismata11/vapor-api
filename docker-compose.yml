# Docker Compose file for Vapor
#
# Install Docker on your system to run and test
# your Vapor app in a production-like environment.
#
# Note: This file is intended for testing and does not
# implement best practices for a production deployment.
#
# Learn more: https://docs.docker.com/compose/reference/
#
#   Build images: docker compose build
#      Start app: docker compose up app
# Start database: docker compose up db
# Run migrations: docker compose run migrate
#       Stop all: docker compose down (add -v to wipe db)
#

# volumes:
#   db_data:
  
# services:
  # app:
  #   image: vapor-api:latest
  #   build:
  #     context: .
  #   environment:
  #     <<: *shared_environment
  #   depends_on:
  #     - db
  #   ports:
  #     - '8080:8080'
  #   # user: '0' # uncomment to run as root for testing purposes even though Dockerfile defines 'vapor' user.
  #   command: ["serve", "--env", "production", "--hostname", "0.0.0.0", "--port", "8080"]
  # db:
  #   image: mysql:8
  #   volumes:
  #     - db_data:/var/lib/mysql
  #   environment:
  #     MYSQL_USER: vapor_username
  #     MYSQL_PASSWORD: 1234567
  #     MYSQL_DATABASE: vapor_database
  #     MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
  #   ports:
  #     - '3311:3306'
  services:
    api:
      build: .
      ports:
        - "8080:8080"
      depends_on:
        - db
      environment:
        - DB_HOST=db
        - DB_USER=root
        - DB_PASSWORD=root
        - DB_NAME=hotoes

    db:
      image: mysql:8.0
      environment:
        MYSQL_ROOT_PASSWORD: root
        MYSQL_DATABASE: hotoes
      ports:
        - "3306:3306"
      volumes:
        - mysql_data:/var/lib/mysql  
  volumes:
    mysql_data: